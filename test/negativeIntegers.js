var assert = require('assert')
var is = require('../lib/is')
var fn = function(){}

describe('integers', function(){

  it('negativeInteger', function(){
    assert.equal(false, is.negativeInteger(fn))
    assert.equal(false, is.negativeInteger(new Date()))
    assert.equal(false, is.negativeInteger(undefined))
    assert.equal(false, is.negativeInteger(NaN))
    assert.equal(false, is.negativeInteger(null))
    assert.equal(false, is.negativeInteger(true))
    assert.equal(false, is.negativeInteger(false))
    assert.equal(false, is.negativeInteger({}))
    assert.equal(false, is.negativeInteger([]))
    assert.equal(false, is.negativeInteger(""))
    assert.equal(false, is.negativeInteger("  "))
    assert.equal(false, is.negativeInteger("asdf"))
    assert.equal(false, is.negativeInteger("1.23"))
    assert.equal(false, is.negativeInteger("-42"))
    assert.equal(false, is.negativeInteger("-42.01"))
    assert.equal(false, is.negativeInteger("-1"))
    assert.equal(false, is.negativeInteger("0"))
    assert.equal(false, is.negativeInteger("666"))
    assert.equal(false, is.negativeInteger(1.23))
    assert.equal(true,  is.negativeInteger(-42))
    assert.equal(true,  is.negativeInteger(-1))
    assert.equal(false, is.negativeInteger(0))
    assert.equal(false, is.negativeInteger(666))
  })

  it('negInt', function(){
    assert.equal(false, is.negInt(fn))
    assert.equal(false, is.negInt(new Date()))
    assert.equal(false, is.negInt(undefined))
    assert.equal(false, is.negInt(NaN))
    assert.equal(false, is.negInt(null))
    assert.equal(false, is.negInt(true))
    assert.equal(false, is.negInt(false))
    assert.equal(false, is.negInt({}))
    assert.equal(false, is.negInt([]))
    assert.equal(false, is.negInt(""))
    assert.equal(false, is.negInt("   "))
    assert.equal(false, is.negInt("asdf"))
    assert.equal(false, is.negInt("1.23"))
    assert.equal(false, is.negInt("-42"))
    assert.equal(false, is.negInt("-42.01"))
    assert.equal(false, is.negInt("-1"))
    assert.equal(false, is.negInt("0"))
    assert.equal(false, is.negInt("666"))
    assert.equal(false, is.negInt(1.23))
    assert.equal(true,  is.negInt(-42))
    assert.equal(true,  is.negInt(-1))
    assert.equal(false, is.negInt(0))
    assert.equal(false, is.negInt(666))
  })

  it('aNegativeInteger', function(){
    assert.equal(false, is.aNegativeInteger(fn))
    assert.equal(false, is.aNegativeInteger(new Date()))
    assert.equal(false, is.aNegativeInteger(undefined))
    assert.equal(false, is.aNegativeInteger(NaN))
    assert.equal(false, is.aNegativeInteger(null))
    assert.equal(false, is.aNegativeInteger(true))
    assert.equal(false, is.aNegativeInteger(false))
    assert.equal(false, is.aNegativeInteger({}))
    assert.equal(false, is.aNegativeInteger([]))
    assert.equal(false, is.aNegativeInteger(""))
    assert.equal(false, is.aNegativeInteger("    "))
    assert.equal(false, is.aNegativeInteger("asdf"))
    assert.equal(false, is.aNegativeInteger("1.23"))
    assert.equal(true,  is.aNegativeInteger("-42"))
    assert.equal(false, is.aNegativeInteger("-42.01"))
    assert.equal(true,  is.aNegativeInteger("-1"))
    assert.equal(false, is.aNegativeInteger("0"))
    assert.equal(false, is.aNegativeInteger("666"))
    assert.equal(false, is.aNegativeInteger(1.23))
    assert.equal(true,  is.aNegativeInteger(-42))
    assert.equal(true,  is.aNegativeInteger(-1))
    assert.equal(false, is.aNegativeInteger(0))
    assert.equal(false, is.aNegativeInteger(666))
  })

  it('aNegInt', function(){
    assert.equal(false, is.aNegInt(fn))
    assert.equal(false, is.aNegInt(new Date()))
    assert.equal(false, is.aNegInt(undefined))
    assert.equal(false, is.aNegInt(NaN))
    assert.equal(false, is.aNegInt(null))
    assert.equal(false, is.aNegInt(true))
    assert.equal(false, is.aNegInt(false))
    assert.equal(false, is.aNegInt({}))
    assert.equal(false, is.aNegInt([]))
    assert.equal(false, is.aNegInt(""))
    assert.equal(false, is.aNegInt("    "))
    assert.equal(false, is.aNegInt("asdf"))
    assert.equal(false, is.aNegInt("1.23"))
    assert.equal(true,  is.aNegInt("-42"))
    assert.equal(false, is.aNegInt("-42.01"))
    assert.equal(true,  is.aNegInt("-1"))
    assert.equal(false, is.aNegInt("0"))
    assert.equal(false, is.aNegInt("666"))
    assert.equal(false, is.aNegInt(1.23))
    assert.equal(true,  is.aNegInt(-42))
    assert.equal(true,  is.aNegInt(-1))
    assert.equal(false, is.aNegInt(0))
    assert.equal(false, is.aNegInt(666))
  })

  it('negativeInteger + arg', function(){
    assert.equal(false, is.negativeInteger(fn, 2))
    assert.equal(false, is.negativeInteger(new Date(), 2))
    assert.equal(false, is.negativeInteger(undefined, 2))
    assert.equal(false, is.negativeInteger(NaN, 2))
    assert.equal(false, is.negativeInteger(null, 2))
    assert.equal(false, is.negativeInteger(true, 2))
    assert.equal(false, is.negativeInteger(false, 2))
    assert.equal(false, is.negativeInteger({}, 2))
    assert.equal(false, is.negativeInteger([], 2))
    assert.equal(false, is.negativeInteger("", 2))
    assert.equal(false, is.negativeInteger("   ", 2))
    assert.equal(false, is.negativeInteger("asdf", 2))
    assert.equal(false, is.negativeInteger("1.23", 2))
    assert.equal(false, is.negativeInteger("-42", 2))
    assert.equal(false, is.negativeInteger("-42.01", 2))
    assert.equal(false, is.negativeInteger("-1", 2))
    assert.equal(false, is.negativeInteger("0", 2))
    assert.equal(false, is.negativeInteger("666", 2))
    assert.equal(false, is.negativeInteger(1.23, 2))
    assert.equal(true,  is.negativeInteger(-42, 2))
    assert.equal(true,  is.negativeInteger(-1, 2))
    assert.equal(false, is.negativeInteger(0, 2))
    assert.equal(false, is.negativeInteger(1, 2))
    assert.equal(false, is.negativeInteger(666, 2))

    assert.equal(false, is.negativeInteger(fn, -2))
    assert.equal(false, is.negativeInteger(new Date(), -2))
    assert.equal(false, is.negativeInteger(undefined, -2))
    assert.equal(false, is.negativeInteger(NaN, -2))
    assert.equal(false, is.negativeInteger(null, -2))
    assert.equal(false, is.negativeInteger(true, -2))
    assert.equal(false, is.negativeInteger(false, -2))
    assert.equal(false, is.negativeInteger({}, -2))
    assert.equal(false, is.negativeInteger([], -2))
    assert.equal(false, is.negativeInteger("", -2))
    assert.equal(false, is.negativeInteger("   ", -2))
    assert.equal(false, is.negativeInteger("asdf", -2))
    assert.equal(false, is.negativeInteger("1.23", -2))
    assert.equal(false, is.negativeInteger("-42", -2))
    assert.equal(false, is.negativeInteger("-42.01", -2))
    assert.equal(false, is.negativeInteger("-1", -2))
    assert.equal(false, is.negativeInteger("0", -2))
    assert.equal(false, is.negativeInteger("666", -2))
    assert.equal(false, is.negativeInteger(1.23, -2))
    assert.equal(true,  is.negativeInteger(-42, -2))
    assert.equal(false, is.negativeInteger(-1, -2))
    assert.equal(false, is.negativeInteger(0, -2))
    assert.equal(false, is.negativeInteger(1, -2))
    assert.equal(false, is.negativeInteger(666, -2))
  })

  it('negInt + arg', function(){
    assert.equal(false, is.negInt(fn, 2))
    assert.equal(false, is.negInt(new Date(), 2))
    assert.equal(false, is.negInt(undefined, 2))
    assert.equal(false, is.negInt(NaN, 2))
    assert.equal(false, is.negInt(null, 2))
    assert.equal(false, is.negInt(true, 2))
    assert.equal(false, is.negInt(false, 2))
    assert.equal(false, is.negInt({}, 2))
    assert.equal(false, is.negInt([], 2))
    assert.equal(false, is.negInt("", 2))
    assert.equal(false, is.negInt("   ", 2))
    assert.equal(false, is.negInt("asdf", 2))
    assert.equal(false, is.negInt("1.23", 2))
    assert.equal(false, is.negInt("-42", 2))
    assert.equal(false, is.negInt("-42.01", 2))
    assert.equal(false, is.negInt("-1", 2))
    assert.equal(false, is.negInt("0", 2))
    assert.equal(false, is.negInt("666", 2))
    assert.equal(false, is.negInt(1.23, 2))
    assert.equal(true,  is.negInt(-42, 2))
    assert.equal(true,  is.negInt(-1, 2))
    assert.equal(false, is.negInt(0, 2))
    assert.equal(false, is.negInt(1, 2))
    assert.equal(false, is.negInt(666, 2))

    assert.equal(false, is.negInt(fn, -2))
    assert.equal(false, is.negInt(new Date(), -2))
    assert.equal(false, is.negInt(undefined, -2))
    assert.equal(false, is.negInt(NaN, -2))
    assert.equal(false, is.negInt(null, -2))
    assert.equal(false, is.negInt(true, -2))
    assert.equal(false, is.negInt(false, -2))
    assert.equal(false, is.negInt({}, -2))
    assert.equal(false, is.negInt([], -2))
    assert.equal(false, is.negInt("", -2))
    assert.equal(false, is.negInt("   ", -2))
    assert.equal(false, is.negInt("asdf", -2))
    assert.equal(false, is.negInt("1.23", -2))
    assert.equal(false, is.negInt("-42", -2))
    assert.equal(false, is.negInt("-42.01", -2))
    assert.equal(false, is.negInt("-1", -2))
    assert.equal(false, is.negInt("0", -2))
    assert.equal(false, is.negInt("666", -2))
    assert.equal(false, is.negInt(1.23, -2))
    assert.equal(true,  is.negInt(-42, -2))
    assert.equal(false, is.negInt(-1, -2))
    assert.equal(false, is.negInt(0, -2))
    assert.equal(false, is.negInt(1, -2))
    assert.equal(false, is.negInt(666, -2))
  })

  it('aNegativeInteger + arg', function(){
    assert.equal(false, is.aNegativeInteger(fn, 2))
    assert.equal(false, is.aNegativeInteger(new Date(), 2))
    assert.equal(false, is.aNegativeInteger(undefined, 2))
    assert.equal(false, is.aNegativeInteger(NaN, 2))
    assert.equal(false, is.aNegativeInteger(null, 2))
    assert.equal(false, is.aNegativeInteger(true, 2))
    assert.equal(false, is.aNegativeInteger(false, 2))
    assert.equal(false, is.aNegativeInteger({}, 2))
    assert.equal(false, is.aNegativeInteger([], 2))
    assert.equal(false, is.aNegativeInteger("", 2))
    assert.equal(false, is.aNegativeInteger("   ", 2))
    assert.equal(false, is.aNegativeInteger("asdf", 2))
    assert.equal(false, is.aNegativeInteger("1.23", 2))
    assert.equal(true , is.aNegativeInteger("-42", 2))
    assert.equal(false, is.aNegativeInteger("-42.01", 2))
    assert.equal(true , is.aNegativeInteger("-1", 2))
    assert.equal(false, is.aNegativeInteger("0", 2))
    assert.equal(false, is.aNegativeInteger("666", 2))
    assert.equal(false, is.aNegativeInteger(1.23, 2))
    assert.equal(true , is.aNegativeInteger(-42, 2))
    assert.equal(true , is.aNegativeInteger(-1, 2))
    assert.equal(false, is.aNegativeInteger(0, 2))
    assert.equal(false, is.aNegativeInteger(1, 2))
    assert.equal(false, is.aNegativeInteger(666, 2))

    assert.equal(false, is.aNegativeInteger(fn, -2))
    assert.equal(false, is.aNegativeInteger(new Date(), -2))
    assert.equal(false, is.aNegativeInteger(undefined, -2))
    assert.equal(false, is.aNegativeInteger(NaN, -2))
    assert.equal(false, is.aNegativeInteger(null, -2))
    assert.equal(false, is.aNegativeInteger(true, -2))
    assert.equal(false, is.aNegativeInteger(false, -2))
    assert.equal(false, is.aNegativeInteger({}, -2))
    assert.equal(false, is.aNegativeInteger([], -2))
    assert.equal(false, is.aNegativeInteger("", -2))
    assert.equal(false, is.aNegativeInteger("   ", -2))
    assert.equal(false, is.aNegativeInteger("asdf", -2))
    assert.equal(false, is.aNegativeInteger("1.23", -2))
    assert.equal(true , is.aNegativeInteger("-42", -2))
    assert.equal(false, is.aNegativeInteger("-42.01", -2))
    assert.equal(false, is.aNegativeInteger("-1", -2))
    assert.equal(false, is.aNegativeInteger("0", -2))
    assert.equal(false, is.aNegativeInteger("666", -2))
    assert.equal(false, is.aNegativeInteger(1.23, -2))
    assert.equal(true , is.aNegativeInteger(-42, -2))
    assert.equal(false, is.aNegativeInteger(-1, -2))
    assert.equal(false, is.aNegativeInteger(0, -2))
    assert.equal(false, is.aNegativeInteger(1, -2))
    assert.equal(false, is.aNegativeInteger(666, -2))
  })

  it('aNegInt + arg', function(){
    assert.equal(false, is.aNegInt(fn, 2))
    assert.equal(false, is.aNegInt(new Date(), 2))
    assert.equal(false, is.aNegInt(undefined, 2))
    assert.equal(false, is.aNegInt(NaN, 2))
    assert.equal(false, is.aNegInt(null, 2))
    assert.equal(false, is.aNegInt(true, 2))
    assert.equal(false, is.aNegInt(false, 2))
    assert.equal(false, is.aNegInt({}, 2))
    assert.equal(false, is.aNegInt([], 2))
    assert.equal(false, is.aNegInt("", 2))
    assert.equal(false, is.aNegInt("   ", 2))
    assert.equal(false, is.aNegInt("asdf", 2))
    assert.equal(false, is.aNegInt("1.23", 2))
    assert.equal(true , is.aNegInt("-42", 2))
    assert.equal(false, is.aNegInt("-42.01", 2))
    assert.equal(true , is.aNegInt("-1", 2))
    assert.equal(false, is.aNegInt("0", 2))
    assert.equal(false, is.aNegInt("666", 2))
    assert.equal(false, is.aNegInt(1.23, 2))
    assert.equal(true,  is.aNegInt(-42, 2))
    assert.equal(true,  is.aNegInt(-1, 2))
    assert.equal(false, is.aNegInt(0, 2))
    assert.equal(false, is.aNegInt(1, 2))
    assert.equal(false, is.aNegInt(666, 2))

    assert.equal(false, is.aNegInt(fn, -2))
    assert.equal(false, is.aNegInt(new Date(), -2))
    assert.equal(false, is.aNegInt(undefined, -2))
    assert.equal(false, is.aNegInt(NaN, -2))
    assert.equal(false, is.aNegInt(null, -2))
    assert.equal(false, is.aNegInt(true, -2))
    assert.equal(false, is.aNegInt(false, -2))
    assert.equal(false, is.aNegInt({}, -2))
    assert.equal(false, is.aNegInt([], -2))
    assert.equal(false, is.aNegInt("", -2))
    assert.equal(false, is.aNegInt("   ", -2))
    assert.equal(false, is.aNegInt("asdf", -2))
    assert.equal(false, is.aNegInt("1.23", -2))
    assert.equal(true , is.aNegInt("-42", -2))
    assert.equal(false, is.aNegInt("-42.01", -2))
    assert.equal(false, is.aNegInt("-1", -2))
    assert.equal(false, is.aNegInt("0", -2))
    assert.equal(false, is.aNegInt("666", -2))
    assert.equal(false, is.aNegInt(1.23, -2))
    assert.equal(true,  is.aNegInt(-42, -2))
    assert.equal(false, is.aNegInt(-1, -2))
    assert.equal(false, is.aNegInt(0, -2))
    assert.equal(false, is.aNegInt(1, -2))
    assert.equal(false, is.aNegInt(666, -2))
  })

})
